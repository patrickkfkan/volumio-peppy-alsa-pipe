{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,6DAA6D;AAC7D,aAAa;AACb,8CAAuB;AACvB,6DAA6D;AAC7D,aAAa;AACb,oDAA2B;AAE3B,sFAA6C;AAC7C,0CAAiE;AACjE,8CAAwD;AACxD,oDAAgE;AAChE,oEAA4C;AAC5C,iFAAyD;AAEzD,MAAM,uBAAuB;IAO3B,YAAY,OAAY;;QALxB,mDAAc;QACd,kDAAa;QACb,yDAAoB;QACpB,uDAAiC;QAG/B,uBAAA,IAAI,oCAAY,OAAO,MAAA,CAAC;QACxB,uBAAA,IAAI,0CAAkB,uBAAA,IAAI,wCAAS,CAAC,WAAW,MAAA,CAAC;QAChD,uBAAA,IAAI,wCAAgB,IAAI,MAAA,CAAC;IAC3B,CAAC;IAED,WAAW;QACT,OAAO,IAAA,qBAAc,EAAC,uBAAA,IAAI,kFAAe,MAAnB,IAAI,CAAiB,CAAC;aACzC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE;YACnB,8BAAG,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,oEAAoE,KAAK,EAAE,CAAC,CAAC;YACnG,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IA8BD,qBAAqB;QACnB,OAAO,CAAE,aAAa,CAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IAEH,cAAc;QACZ,MAAM,UAAU,GAAG,uBAAA,IAAI,8CAAe,CAAC,aAAa,CAAC,oBAAoB,CAAC,uBAAA,IAAI,wCAAS,EAAE,aAAa,CAAC,CAAC;QACxG,uBAAA,IAAI,mCAAW,IAAI,gBAAK,EAAE,MAAA,CAAC;QAC3B,uBAAA,IAAI,uCAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,OAAO,aAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,OAAO;QACL,OAAO,IAAA,qBAAc,EAAO,CAAC,KAAK,IAAI,EAAE;YACtC,8BAAG,CAAC,IAAI,CAAC,uBAAA,IAAI,wCAAS,EAAE,uBAAA,IAAI,uCAAQ,CAAC,CAAC;YACtC,uBAAA,IAAI,wCAAgB,IAAI,qBAAW,EAAE,MAAA,CAAC;YACtC,MAAM,IAAA,oBAAW,EAAC,2CAA2C,EAAE,IAAI,CAAC,CAAC;YACrE,MAAM,IAAA,eAAM,EAAC,qBAAS,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,IAAA,eAAM,EAAC,qBAAS,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,EAAE,CAAC,CAAC;IACR,CAAC;IAED,MAAM;QACJ,OAAO,IAAA,qBAAc,EAAO,CAAC,KAAK,IAAI,EAAE;YAEtC,IAAI,uBAAA,IAAI,4CAAa,EAAE;gBACrB,MAAM,uBAAA,IAAI,4CAAa,CAAC,OAAO,EAAE,CAAC;gBAClC,uBAAA,IAAI,wCAAgB,IAAI,MAAA,CAAC;aAC1B;YACD,IAAI;gBACF,MAAM,IAAA,oBAAW,EAAC,WAAW,qBAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;gBACtD,MAAM,IAAA,oBAAW,EAAC,WAAW,qBAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;aAC1D;YACD,OAAO,KAAK,EAAE;gBACZ,aAAa;aACd;YACD,8BAAG,CAAC,KAAK,EAAE,CAAC;QACd,CAAC,CAAC,EAAE,CAAC,CAAC;IACR,CAAC;IAED,UAAU;QACR,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE;YACX,8BAAG,CAAC,KAAK,CAAC,OAAO,EAAE,8BAAG,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;YAC9D,OAAO;SACR;QAED;;WAEG;QACH,MAAM,gBAAgB,GAAG;;kCAEK,8BAAG,CAAC,OAAO,CAAC,4BAA4B,CAAC;;;gBAG3D,8BAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC;gBACpC,MAAM,CAAC,SAAS,CAAC,KAAK;;;gBAGtB,8BAAG,CAAC,OAAO,CAAC,0BAA0B,CAAC;gBACvC,MAAM,CAAC,SAAS,CAAC,QAAQ;;KAEpC,CAAC;QAEF;;WAEG;QACH,MAAM,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC;QAChE,MAAM,IAAI,GAAG;YACX,WAAW,EAAE,CAAC;YACd,SAAS,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC,CAAC;QACF,IAAI,kBAAkB,GAAG;;4CAEe,8BAAG,CAAC,OAAO,CAAC,8BAA8B,CAAC;;;uBAGhE,8BAAG,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBACnD,MAAM,CAAC,WAAW,CAAC,YAAY;;;;YAK7C,cAAc,CAAC,CAAC;YACd,8BAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,IAAI,CAAC,WAAW,CAAC;YACvD,CAAC;gBACD,8BAAG,CAAC,OAAO,CAAC,8BAA8B,CAC9C;;;YAIE,cAAc,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU;YACzC,CAAC;gBACD,8BAAG,CAAC,OAAO,CAAC,yBAAyB,EAAE,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAChF;;;;uBAIuB,8BAAG,CAAC,OAAO,CAAC,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC;gBAChE,MAAM,CAAC,WAAW,CAAC,SAAS;;;KAGvC,CAAC;QACF,IAAI,cAAc,EAAE;YAClB,kBAAkB,IAAI;;;cAGd,8BAAG,CAAC,OAAO,CAAC,4BAA4B,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;;;OAG7G,CAAC;SACH;QACD,kBAAkB,IAAI;;;YAGd,8BAAG,CAAC,OAAO,CAAC,gCAAgC,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;;;KAGlG,CAAC;QAEF;;WAEG;QACH,IAAI,cAAc,GAAG;;4CAEmB,8BAAG,CAAC,OAAO,CAAC,0BAA0B,CAAC;;;uBAG5D,8BAAG,CAAC,OAAO,CAAC,0BAA0B,CAAC;KACzD,CAAC;QACF,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC3B,cAAc,IAAI;gBACR,8BAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;OAC5E,CAAC;SACH;aACI;YACH,cAAc,IAAI;gBACR,8BAAG,CAAC,OAAO,CAAC,yBAAyB,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;OACtE,CAAC;SACH;QACD,cAAc,IAAI;;KAEjB,CAAC;QAEF;;WAEG;QACH,MAAM,IAAI,GAAG;;QAET,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;;KAEjB,CAAC;QAEF,MAAM,SAAS,GAAG;YAChB,KAAK,EAAE,8BAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC;YACrC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,CAAE;oBACT,IAAI,EAAE,8BAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC;oBAC1C,KAAK,EAAE,iBAAiB;oBACxB,IAAI,EAAE,aAAa;oBACnB,OAAO,EAAE,EAAE;iBACZ,CAAE;SACJ,CAAC;QAEF,uBAAA,IAAI,8CAAe,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,yBAAyB,CAAC,IAAyB;QACjD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,SAAS,GAAG,8BAAG,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACtD,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,8BAAG,CAAC,cAAc,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YAC5C,8BAAG,CAAC,KAAK,CAAC,SAAS,EAAE,8BAAG,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC,CAAC;YACpE,8BAAG,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,CAAC,KAAU,EAAE,EAAE;gBAC9C,IAAI,KAAK,EAAE;oBACT,8BAAG,CAAC,SAAS,EAAE,CAAC,KAAK,CACnB,8BAAG,CAAC,eAAe,CAAC,uCAAuC,yBAAa,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;oBACvF,8BAAG,CAAC,KAAK,CAAC,OAAO,EAAE,8BAAG,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;iBACxE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,uBAAA,IAAI,4CAAa,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,SAAS,EAAE;gBACT,KAAK,EAAE,qBAAS,CAAC,KAAK;gBACtB,QAAQ,EAAE,qBAAS,CAAC,QAAQ;aAC7B;YACD,WAAW,EAAE,uBAAA,IAAI,4CAAa,CAAC,cAAc,EAAE;YAC/C,OAAO,EAAE,uBAAA,IAAI,4CAAa,CAAC,gBAAgB,EAAE;SAC9C,CAAC;IACJ,CAAC;CACF;8SAxOC,KAAK;IACH,MAAM,QAAQ,GAAG,uBAAA,IAAI,8CAAe,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACrE,MAAM,OAAO,GAAG,MAAM,IAAA,qBAAc,EAAC,uBAAA,IAAI,8CAAe,CAAC,QAAQ,CAC/D,GAAG,SAAS,iBAAiB,QAAQ,OAAO,EAC5C,GAAG,SAAS,uBAAuB,EACnC,GAAG,SAAS,gBAAgB,CAAC,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,wBAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAE/C,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC;IAE9C,MAAM,aAAa,GAAG,8BAAG,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC1D,IAAI,kBAA0B,CAAC;IAC/B,QAAQ,aAAa,EAAE;QACrB,KAAK,aAAa;YAChB,kBAAkB,GAAG,8BAAG,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YAClE,MAAM;QACR,KAAK,MAAM;YACT,kBAAkB,GAAG,8BAAG,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAChE,MAAM;KACT;IACD,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG;QACnC,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,kBAAkB;KAC1B,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC;AAgNH,iBAAS,uBAAuB,CAAC","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport pap from './lib/PeppyAlsaPipeContext';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/util/Misc';\nimport { execCommand, mkfifo } from './lib/util/System';\nimport { FIFO_PATH, MPD_CONF_FILE } from './lib/util/Constants';\nimport ConfManager from './lib/ConfManager';\nimport UIConfigHelper from './lib/config/UIConfigHelper';\n\nclass ControllerPeppyAlsaPipe {\n\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n  #confManager: ConfManager | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#confManager = null;\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        pap.getLogger().error(`[peppy_alsa_pipe] getUIConfig(): Cannot populate configuration - ${error}`);\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const _uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const uiconf = UIConfigHelper.observe(_uiconf);\n\n    const mpdConfUIConf = uiconf.section_mpd_conf;\n\n    const mpdConfModify = pap.getConfigValue('mpdConfModify');\n    let mpdConfModifyLabel: string;\n    switch (mpdConfModify) {\n      case 'peppyBypass':\n        mpdConfModifyLabel = pap.getI18n('PEPPY_ALSA_PIPE_MODIFY_BYPASS');\n        break;\n      case 'none':\n        mpdConfModifyLabel = pap.getI18n('PEPPY_ALSA_PIPE_MODIFY_NONE');\n        break;\n    }\n    mpdConfUIConf.content.modify.value = {\n      value: mpdConfModify,\n      label: mpdConfModifyLabel\n    };\n\n    return uiconf;\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  /**\n   * Plugin lifecycle\n   */\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    return jsPromiseToKew<void>((async () => {\n      pap.init(this.#context, this.#config);\n      this.#confManager = new ConfManager();\n      await execCommand('/sbin/modprobe snd-dummy pcm_substreams=1', true);\n      await mkfifo(FIFO_PATH.METER);\n      await mkfifo(FIFO_PATH.SPECTRUM);\n    })());\n  }\n\n  onStop() {\n    return jsPromiseToKew<void>((async () => {\n\n      if (this.#confManager) {\n        await this.#confManager.destroy();\n        this.#confManager = null;\n      }\n      try {\n        await execCommand(`/bin/rm ${FIFO_PATH.METER}`, true);\n        await execCommand(`/bin/rm ${FIFO_PATH.SPECTRUM}`, true);\n      }\n      catch (error) {\n        // Do nothing\n      }\n      pap.reset();\n    })());\n  }\n\n  showStatus() {\n    const status = this.getStatus();\n    if (!status) {\n      pap.toast('error', pap.getI18n('PEPPY_ALSA_PIPE_STATUS_ERR'));\n      return;\n    }\n\n    /**\n     * FIFO paths\n     */\n    const fifoPathsSection = `\n        <tr>\n          <td colspan=\"2\"><p><u>${pap.getI18n('PEPPY_ALSA_PIPE_FIFO_PATHS')}</u></p></td>\n        </tr>\n        <tr>\n          <td>${pap.getI18n('PEPPY_ALSA_PIPE_METER')}</td>\n          <td>${status.fifoPaths.meter}</td>\n        </tr>\n        <tr>\n          <td>${pap.getI18n('PEPPY_ALSA_PIPE_SPECTRUM')}</td>\n          <td>${status.fifoPaths.spectrum}</td>\n        </tr>\n    `;\n\n    /**\n     * Peppy Bypass\n     */\n    const hasPeppyBypass = status.alsaDevices.peppyBypass.available;\n    const sups = {\n      peppyBypass: 1,\n      peppyOnly: !hasPeppyBypass ? 1 : 2\n    };\n    let alsaDevicesSection = `\n        <tr>\n          <td colspan=\"2\"></br></br><p><u>${pap.getI18n('PEPPY_ALSA_PIPE_ALSA_DEVICES')}</u></p></td>\n        </tr>\n        <tr>\n          <td nowrap>${pap.getI18n('PEPPY_ALSA_PIPE_FULL_PIPELINE')}</td>\n          <td>${status.alsaDevices.fullPipeline}</td>\n        </tr>\n        <tr>\n          <td nowrap>\n          ${\n  hasPeppyBypass ?\n    pap.getI18n('PEPPY_ALSA_PIPE_BYPASS', sups.peppyBypass)\n    :\n    pap.getI18n('PEPPY_ALSA_PIPE_BYPASS_NOSUP')\n}\n          </td>\n          <td>\n          ${\n  hasPeppyBypass ?\n    status.alsaDevices.peppyBypass.alsaDevice\n    :\n    pap.getI18n('PEPPY_ALSA_PIPE_NA_DESC', status.alsaDevices.peppyBypass.reason)\n}\n          </td>\n        </tr>\n        <tr>\n          <td nowrap>${pap.getI18n('PEPPY_ALSA_PIPE_PEPPY_ONLY', sups.peppyOnly)}</td>\n          <td>${status.alsaDevices.peppyOnly}</td>\n        </tr>\n\n    `;\n    if (hasPeppyBypass) {\n      alsaDevicesSection += `\n        <tr>\n          <td colspan=\"2\"></br><small>\n            ${pap.getI18n('PEPPY_ALSA_PIPE_BYPASS_TIP', sups.peppyBypass, status.alsaDevices.peppyBypass.alsaDevice)}\n            </small></td>\n        </tr>\n      `;\n    }\n    alsaDevicesSection += `\n      <tr>\n        <td colspan=\"2\"></br><small>\n          ${pap.getI18n('PEPPY_ALSA_PIPE_PEPPY_ONLY_TIP', sups.peppyOnly, status.alsaDevices.peppyOnly)}\n        </small></td>\n      </tr>\n    `;\n\n    /**\n     * MPD conf\n     */\n    let mpdConfSection = `\n        <tr>\n          <td colspan=\"2\"></br></br><p><u>${pap.getI18n('PEPPY_ALSA_PIPE_MPD_CONF')}</u></p></td>\n        </tr>\n        <tr>\n          <td nowrap>${pap.getI18n('PEPPY_ALSA_PIPE_MODIFIED')}</td>\n    `;\n    if (status.mpdConf.modified) {\n      mpdConfSection += `\n          <td>${pap.getI18n('PEPPY_ALSA_PIPE_YES_DESC', status.mpdConf.description)}</td>\n      `;\n    }\n    else {\n      mpdConfSection += `\n          <td>${pap.getI18n('PEPPY_ALSA_PIPE_NO_DESC', status.mpdConf.reason)}</td>\n      `;\n    }\n    mpdConfSection += `\n        </tr>\n    `;\n\n    /**\n     * Combine\n     */\n    const html = `\n      <table>\n      ${fifoPathsSection}\n      ${alsaDevicesSection}\n      ${mpdConfSection}\n      </table>\n    `;\n\n    const modalData = {\n      title: pap.getI18n('PEPPY_ALSA_PIPE'),\n      message: html,\n      size: 'lg',\n      buttons: [ {\n        name: pap.getI18n('PEPPY_ALSA_PIPE_CLOSE'),\n        class: 'btn btn-warning',\n        emit: 'closeModals',\n        payload: ''\n      } ]\n    };\n\n    this.#commandRouter.broadcastMessage('openModal', modalData);\n  }\n\n  configSaveMPDConfSettings(data: Record<string, any>) {\n    const modify = data.modify.value;\n    const oldModify = pap.getConfigValue('mpdConfModify');\n    if (modify !== oldModify) {\n      pap.setConfigValue('mpdConfModify', modify);\n      pap.toast('success', pap.getI18n('PEPPY_ALSA_PIPE_SETTINGS_SAVED'));\n      pap.getMpdPlugin().createMPDFile((error: any) => {\n        if (error) {\n          pap.getLogger().error(\n            pap.getErrorMessage(`[peppy_alsa_pipe] Failed to update \"${MPD_CONF_FILE}\"`, error));\n          pap.toast('error', pap.getI18n('PEPPY_ALSA_PIPE_ERR_UPDATE_MPD_CONF'));\n        }\n      });\n    }\n  }\n\n  getStatus() {\n    if (!this.#confManager) {\n      return null;\n    }\n\n    return {\n      fifoPaths: {\n        meter: FIFO_PATH.METER,\n        spectrum: FIFO_PATH.SPECTRUM\n      },\n      alsaDevices: this.#confManager.getAlsaDevices(),\n      mpdConf: this.#confManager.getMpdConfStatus()\n    };\n  }\n}\n\nexport = ControllerPeppyAlsaPipe;\n"]}